import numpy as np

def sigmoid(z):
    return 1 / (1 + np.exp(-z))

def logistic_regression(X, y, lr=0.1, epochs=1000):
    w = np.zeros(X.shape[1])
    b = 0
    for _ in range(epochs):
        z = np.dot(X, w) + b
        y_pred = sigmoid(z)
        error = y - y_pred
        w += lr * np.dot(X.T, error)
        b += lr * sum(error)
    return w, b
